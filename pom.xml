<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>
  <modules>
    <module>vvd-common</module>
    <module>vvd-commonkt</module>
    <module>vvd-taskproducer</module>
    <module>vvd-downloader</module>
    <module>vvd-extractor</module>
  </modules>

  <groupId>mikufan.cx</groupId>
  <artifactId>vocadb-video-downloader</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>VocaDB Video Downloader New</name>
  <description>New VocaDB Video Downloader powered by Spring Boot</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>21</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <spring-boot.version>3.2.5</spring-boot.version>
    <!-- can un-comment to resolve deps conflict from spring when happened -->
    <kotlin.version>2.0.0</kotlin.version>
    <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
    <!-- can un-comment to resolve deps conflict from spring when happened -->
    <!--<kotlin-coroutines.version>1.6.4</kotlin-coroutines.version>-->
  </properties>

  <repositories>
    <!--  with multiple repos, it is better to put maven central at front. -->
    <!--  maven always pull packages starting from the first repo defined here, and last one is maven central-->
    <repository>
      <id>maven-central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <!-- for helping me to use maven packages from GitHub -->
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- For some reason, Intellij doesn't detect kotlin-bom -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-reflect</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>vvd-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>vvd-commonkt</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.VocaDB</groupId>
        <artifactId>vocadb-openapi-client-java</artifactId>
        <version>1.2.2</version>
      </dependency>

      <dependency>
        <groupId>com.github.CXwudi</groupId>
        <artifactId>kotlin-jvm-inline-logging</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>com.github.CXwudi</groupId>
        <artifactId>kotlin-jvm-idiomatic-exec</artifactId>
        <version>1.1.0</version>
      </dependency>


      <dependency>
        <groupId>org.jeasy</groupId>
        <artifactId>easy-batch-core</artifactId>
        <version>7.0.2</version>
      </dependency>
      <dependency> <!-- used for detecting file types, https://stackoverflow.com/questions/51438/how-to-get-a-files-media-type-mime-type/13889946#13889946 -->
        <groupId>org.apache.tika</groupId>
        <artifactId>tika-core</artifactId>
        <version>2.9.2</version>
      </dependency>

      <dependency>
        <groupId>io.kotest</groupId>
        <artifactId>kotest-runner-junit5-jvm</artifactId>
        <version>5.9.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.kotest.extensions</groupId>
        <artifactId>kotest-extensions-spring</artifactId>
        <version>1.1.3</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>


    <!-- Bean and other Spring related things can be shared across modules -->
    <!-- but make sure put @ComponentScan that points to the package of common module
         to the @Configuration in application modules -->
    <!-- we recommend not to share the spring-boot-starter-* deps on mother modules,
         this can help us modifying one module deps without breaking others -->


    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.4.4</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.ninja-squad</groupId>
      <artifactId>springmockk</artifactId>
      <version>4.0.2</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>${kotlin.version}</version>
          <configuration>
            <args>
              <arg>-Xjsr305=strict</arg>
              <arg>-Xemit-jvm-type-annotations</arg>
            </args>
            <compilerPlugins>
              <plugin>spring</plugin>
            </compilerPlugins>
            <!-- annotation processing just let lombok work in kotlin -->
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-allopen</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                  <sourceDir>${project.basedir}/src/main/java</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
            <execution>
              <id>test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>test-compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                  <sourceDir>${project.basedir}/src/test/java</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <compilerArgs>
            <!-- mimic spring's compiler config -->
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
    </plugins>
  </build>

</project>
